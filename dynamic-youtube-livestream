>>> Custom code written to change over when service times are live and change back to fallback playlist. 
  1. Change service start and refresh times (refresh must happen after start time)
  2. Start time should be prior to service time
>>> Used for churches that only stream to youtube and doesn't have a ChurchOnline account.

<div style="padding-bottom: 56.25%; position: relative; display: block; width: 100%">
  <div id="sunday-livestream" class="not-live" style="width: 100%; height: 100%;">
    <iframe width="100%" height="100%" src="livestream-channel-url" frameborder="0" allowfullscreen allow="autoplay" style="position: absolute; top: 0; left: 0"></iframe>
  </div>
  <div id="live-playlist" class="live-now" style="width: 100%; height: 100%;">
    <iframe width="100%" height="100%" src="fallback-youtube-playlist" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen style="position: absolute; top: 0; left: 0"></iframe>
  </div>
</div>

<style>
// Livestream Video - Visibility Toggle //
.live-now {
display: block;
}

.not-live {
display: none;
}
</style>

<script>
  function refreshAt(hours, minutes, seconds) {
    var now = new Date();
    var then = new Date();

    if (
      now.getUTCHours() > hours ||
      (now.getUTCHours() === hours && now.getUTCMinutes() > minutes) ||
      (now.getUTCHours() === hours && now.getUTCMinutes() === minutes && now.getUTCSeconds() >= seconds)
    ) {
      then.setUTCDate(now.getUTCDate() + 1);
    }
    then.setUTCHours(hours);
    then.setUTCMinutes(minutes);
    then.setUTCSeconds(seconds);

    var timeout = then.getTime() - now.getTime();
    setTimeout(function () {
      location.reload();
    }, timeout);
  }

  const d = new Date();
  let hour = d.getUTCHours();
  let minutes = d.getUTCMinutes();
  let utcTime = hour + ":" + minutes;

  // Set UTC service start and end time -> Sunday=0
  if (utcTime >= "19:40" && utcTime <= "19:43" && d.getDay() === 1) {
    document.getElementById("sunday-livestream").classList.add("live-now");
    document.getElementById("sunday-livestream").classList.remove("not-live");

    document.getElementById("live-playlist").classList.remove("live-now");
    document.getElementById("live-playlist").classList.add("not-live");
  } else {
    document.getElementById("sunday-livestream").classList.remove("live-now");
    document.getElementById("sunday-livestream").classList.add("not-live");

    document.getElementById("live-playlist").classList.add("live-now");
    document.getElementById("live-playlist").classList.remove("not-live");
  }

  // Refresh the page at the start and end of the service
  refreshAt(19, 41, 0);
  refreshAt(1, 44, 0);
</script>
